esphome:
  name: temperator-wohnzimmer

  on_loop:
    then:
      - if:
          condition:
            - not:
                - script.is_running: demo_script
          then:
            - script.execute: demo_script

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "We12By4XJOvNRokubHRFDIZ0jLtm**************"

ota:
  password: "253206c5c85cb7f************"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Temperator-Wohnzimmer"
    password: "HLTGqCNCTYmn"

captive_portal:
deep_sleep:
  run_duration: 20s
  sleep_duration: 900s

switch:
  - platform: template
    id: sleep_demo_switch
    optimistic: true

script:
  id: demo_script
  mode: single
  then:
    - switch.toggle: sleep_demo_switch
    - delay: 1s 

i2c: 
  sda: GPIO4
  scl: GPIO5
  scan: true
sensor:
  - platform: bmp085
    temperature:
      name: "Wohnzimmer Temperature"
    pressure:
      name: "Wohnzimmer Luftdruck"
    update_interval: 5s
    
  - platform: adc
    pin: VCC
    id: "VCC"
    internal: true
    
  - platform: template
    name: "Wohnzimmer.Temperatur.battery_level"
    unit_of_measurement: '%'
    update_interval: 60s
    lambda: |-
      return ((id(VCC).state /3.30) * 100.00);
      